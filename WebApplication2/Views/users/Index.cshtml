@model IEnumerable<WebApplication2.Models.users>

@{
    ViewBag.Title = "Пользователи";
}

<h2>Пользователи</h2>

<div class="alert alert-primary" role="alert">
    При пользовании данным разделом будьте чрезвучайно аккуратны!
</div>

@using (Html.BeginForm())
{
    <p>
        Поиск по имени: @Html.TextBox("SearchString", null, new { @class = "form-control" }) <input type="submit" value="Поиск" , class="btn btn-primary btn-lg" />
    </p>
}

<style>
    .btn-primary {
        color: #fff;
        background-color: forestgreen;
        border-color: forestgreen;
        padding: 1px 1px;
        margin: 1px;
    }

    .text {
        color: #000000;
    }

    .alert {
        padding: 15px;
        margin-bottom: 20px;
        border: 1px solid transparent;
        border-radius: 4px;
        background-color: #228b22a6;
    }
    table {
        border-collapse: collapse;
    }

    td, th {
        border: 1px solid #aaa;
        padding: 0.5rem;
        text-align: left;
    }

    td {
        font-size: 0.875rem;
    }

    .btn-group {
        padding: 1rem 0;
    }

    button {
        background-color: #fff;
        border: 1px solid #000;
        margin-top: 0.5rem;
        border-radius: 3px;
        padding: 0.5rem 1rem;
        font-size: 1rem;
    }

        button:hover {
            cursor: pointer;
            background-color: #000;
            color: #fff;
        }
</style>
<script type="text/javascript">
    function export2csv() {
        let data = "";
        const tableData = [];
        const rows = document.querySelectorAll("table tr");
        for (const row of rows) {
            const rowData = [];
            for (const [index, column] of row.querySelectorAll("th, td").entries()) {
                // To retain the commas in the "Description" column, we can enclose those fields in quotation marks.
                if ((index + 1) % 3 === 0) {
                    rowData.push('"' + column.innerText + '"');
                } else {
                    rowData.push(column.innerText);
                }
            }
            tableData.push(rowData.join(","));
        }
        data += tableData.join("\n");
        const a = document.createElement("a");
        a.href = URL.createObjectURL(new Blob([data], { type: "text/csv" }));
        a.setAttribute("download", "data.csv");
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
    }
</script>


<p>
    @Html.ActionLink("Создать нового пользователя", "Create", null, new { @class = "btn btn-primary btn-lg" })
</p>
<button class="btn btn-primary btn-lg" onclick="export2csv()">Загрузить таблицу в CSV</button>
<table class="table">
    <tr>
        <th>
            <p>Фото</p>
        </th>
        <th>
            <p>Логин пользователя</p>
        </th>
        <th>
            @Html.ActionLink("Фамилия, имя, отчество", "Index", new { sortOrder = ViewBag.NameSortParm })
        </th>
        <th>
            <p>E-Mail</p>
        </th>
        <th>
            <p>Роль пользователя</p>
        </th>
        <th>
            @Html.ActionLink("ID пользователя", "Index", new { sortOrder = ViewBag.IDSortParm })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>

                @{ byte[] photo = item.img;
                    string imageSrc = null;
                    if (photo != null)
                    {
                        MemoryStream ms = new MemoryStream();
                        ms.Write(photo, 0, photo.Length);
                        string imageBase64 = Convert.ToBase64String(ms.ToArray());
                        imageSrc = string.Format("data:image/jpg;base64,{0}", imageBase64);
                        string base64String = Convert.ToBase64String(photo, 0, photo.Length);
                    }
                }

                <img src="@imageSrc" alt="Image" width="100" height="100" />
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.login)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.fio)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.email)
            </td>
            <td>
                @if (item.role == "admin")
                {<p>Администратор</p>}
                @if (item.role == "emp")
                {<p>Работник</p>}
                @if (item.role == "buh")
                {<p>Бухгалтер</p>}
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.paynamentMethods.userID)
            </td>
            <td>
                @Html.ActionLink("Редактировать", "Edit", new { id = item.id }, new { @class = "btn btn-primary btn-lg" })
                <br />
                @*@Html.ActionLink("Детали", "Details", new { id=item.id }) |*@
                @Html.ActionLink("Удалить", "Delete", new { id = item.id }, new { @class = "btn btn-primary btn-lg" })
            </td>
        </tr>
    }

</table>
